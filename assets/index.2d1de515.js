import{s as f}from"./app.31ce29fc.js";import{l as d,i as p,r as v}from"./index.b35eeed3.js";function b(n){if(n.hasOwnProperty("possibleRulesFor"))return n;var i=v(!0);n.on("updated",function(){i.value=!i.value});var o=n.possibleRulesFor.bind(n);return n.possibleRulesFor=function(e,t){return i.value=i.value,o(e,t)},n.can=n.can.bind(n),n.cannot=n.cannot.bind(n),n}var c=Symbol("ability");function g(){var n=p(c);if(!n)throw new Error("Cannot inject Ability instance because it was not provided");return n}function h(n){return n.a!==void 0?"a":n.this!==void 0?"this":n.an!==void 0?"an":""}d({name:"Can",props:{I:String,do:String,a:[String,Function],an:[String,Function],this:[String,Function,Object],on:[String,Function,Object],not:Boolean,passThrough:Boolean,field:String},setup:function(i,o){var e=o.slots,t=i,a="do",r="on";if(t[a]===void 0&&(a="I",r=h(i)),!t[a])throw new Error("Neither `I` nor `do` prop was passed in <Can>");if(!e.default)throw new Error("Expects to receive default slot");var u=g();return function(){var l=u.can(t[a],t[r],t.field),s=i.not?!l:l;return i.passThrough?e.default({allowed:s,ability:u}):s?e.default():null}}});function S(n,i,o){if(!i||!(i instanceof f))throw new Error("Please provide an Ability instance to abilitiesPlugin plugin");n.provide(c,b(i)),o&&o.useGlobalProperties&&(n.config.globalProperties.$ability=i,n.config.globalProperties.$can=i.can.bind(i))}export{S as l,g as u};
